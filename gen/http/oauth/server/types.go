// Code generated by goa v3.1.1, DO NOT EDIT.
//
// oauth HTTP server types
//
// Command:
// $ goa gen github.com/sm43/goa-crud/design

package server

import (
	oauth "github.com/sm43/goa-crud/gen/oauth"
	goa "goa.design/goa/v3/pkg"
)

// OauthRequestBody is the type of the "oauth" service "oauth" endpoint HTTP
// request body.
type OauthRequestBody struct {
	// Access github token
	Token *string `form:"token,omitempty" json:"token,omitempty" xml:"token,omitempty"`
}

// OauthInternalErrorResponseBody is the type of the "oauth" service "oauth"
// endpoint HTTP response body for the "internal_error" error.
type OauthInternalErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// NewOauthInternalErrorResponseBody builds the HTTP response body from the
// result of the "oauth" endpoint of the "oauth" service.
func NewOauthInternalErrorResponseBody(res *goa.ServiceError) *OauthInternalErrorResponseBody {
	body := &OauthInternalErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewOauthPayload builds a oauth service oauth endpoint payload.
func NewOauthPayload(body *OauthRequestBody) *oauth.OauthPayload {
	v := &oauth.OauthPayload{
		Token: body.Token,
	}

	return v
}
