// Code generated by goa v3.1.1, DO NOT EDIT.
//
// oauth endpoints
//
// Command:
// $ goa gen github.com/sm43/goa-crud/design

package oauth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "oauth" service endpoints.
type Endpoints struct {
	Oauth goa.Endpoint
}

// NewEndpoints wraps the methods of the "oauth" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Oauth: NewOauthEndpoint(s),
	}
}

// Use applies the given middleware to all the "oauth" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Oauth = m(e.Oauth)
}

// NewOauthEndpoint returns an endpoint function that calls the method "oauth"
// of service "oauth".
func NewOauthEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*OauthPayload)
		return s.Oauth(ctx, p)
	}
}
